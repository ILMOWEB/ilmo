name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    # Service for Postgres DB
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Install Poetry
      - name: Install Poetry
        run: pip3 install poetry

      # Install dependencies
      - name: Install dependencies
        run: poetry install

      # Run Migrations
      - name: Run migrations
        working-directory: ./app
        run: poetry run invoke migrate

      # Run tests
      - name: Run unittests
        working-directory: ./app
        run: poetry run invoke unittest

      # Run Pylint
      - name: Lint
        working-directory: ./app
        run: poetry run invoke lint

  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Start containers
        run: docker-compose -f "docker-compose.yml" up -d --build

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ilmoweb:test

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
